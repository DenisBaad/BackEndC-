<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CNPJCPF_TAMANHO_INVALIDO" xml:space="preserve">
    <value>El campo CPFCNPJ no puede tener menos de 11 ni más de 14 números.</value>
  </data>
  <data name="CNPJ_INVALIDO" xml:space="preserve">
    <value>El CNPJ informado es inválido.</value>
  </data>
  <data name="CPF_INVALIDO" xml:space="preserve">
    <value>El CPF informado es inválido.</value>
  </data>
  <data name="DESCRICAO_OBRIGATORIA" xml:space="preserve">
    <value>La descripción debe ser informada</value>
  </data>
  <data name="EMAIL_USUARIO_EMBRANCO" xml:space="preserve">
    <value>El correo electrónico del usuario debe ser informado.</value>
  </data>
  <data name="EMAIL_USUARIO_INVALIDO" xml:space="preserve">
    <value>El correo electrónico del usuario es inválido.</value>
  </data>
  <data name="EMAIL_USUARIO_JA_CADASTRADO" xml:space="preserve">
    <value>El usuario informado ya está registrado en la base de datos.</value>
  </data>
  <data name="FATURA_FIM_VIGENCIA_OBRIGATORIA" xml:space="preserve">
    <value>La fecha de finalización de la vigencia de la factura es obligatoria.</value>
  </data>
  <data name="FATURA_INICIO_VIGENCIA_OBRIGATORIA" xml:space="preserve">
    <value>La fecha de inicio de la vigencia de la factura es obligatoria.</value>
  </data>
  <data name="FATURA_NEGATIVA" xml:space="preserve">
    <value>La factura no puede ser negativa.</value>
  </data>
  <data name="FATURA_VENCIMENTO" xml:space="preserve">
    <value>La fecha de vencimiento de la factura no puede ser anterior a la fecha actual.</value>
  </data>
  <data name="IDENTIDADE_CARACTERES_ESPECIAIS" xml:space="preserve">
    <value>El campo identidad deberá contener solo números.</value>
  </data>
  <data name="IDENTIDADE_TAMANHO_INVALIDO" xml:space="preserve">
    <value>El campo Identidad deberá tener como mínimo 6 y como máximo 20 números.</value>
  </data>
  <data name="LOGIN_INVALIDO" xml:space="preserve">
    <value>Parámetros de inicio de sesión inválidos.</value>
  </data>
  <data name="NOME_CLIENTE_TAMANHO_INVALIDO" xml:space="preserve">
    <value>El nombre del cliente debe tener como mínimo 3 y como máximo 45 caracteres.</value>
  </data>
  <data name="NOME_CLIENTE_VAZIO" xml:space="preserve">
    <value>El nombre del cliente debe ser informado.</value>
  </data>
  <data name="NOME_FANTASIA_CARACTERES_ESPECIAIS" xml:space="preserve">
    <value>El nombre comercial no podrá contener caracteres especiales.</value>
  </data>
  <data name="NOME_FANTASIA_TAMANHO_INVALIDO" xml:space="preserve">
    <value>El nombre comercial debe tener un mínimo de 3 y un máximo de 45 caracteres.</value>
  </data>
  <data name="NOME_USUARIO_EMBRANCO" xml:space="preserve">
    <value>El nombre de usuario debe ser informado.









Perguntar ao ChatGPT</value>
  </data>
  <data name="ORGAO_EXPEDIDOR_CARACTERES_ESPECIAIS" xml:space="preserve">
    <value>El órgano expedidor no podrá contener caracteres especiales.</value>
  </data>
  <data name="ORGAO_EXPEDIDOR_TAMANHO_INVALIDO" xml:space="preserve">
    <value>El órgano expedidor deberá tener como máximo 10 caracteres.</value>
  </data>
  <data name="ORGAO_EXPEDIDOR_VAZIO" xml:space="preserve">
    <value>Cuando se informe la identidad, deberá informarse el órgano expedidor.</value>
  </data>
  <data name="QUANTIDADE_USUARIO_NEGATIVO" xml:space="preserve">
    <value>La cantidad de usuarios no puede ser cero</value>
  </data>
  <data name="SENHA_USUARIO_TAMANHO_INVALIDO" xml:space="preserve">
    <value>La contraseña debe contener al menos seis caracteres.</value>
  </data>
  <data name="STATUS_OBRIGATORIO" xml:space="preserve">
    <value>El estado debe ser informado.</value>
  </data>
  <data name="TIPO_DEVE_SER_INFORMADO" xml:space="preserve">
    <value>El tipo de cliente debe ser informado correctamente.</value>
  </data>
  <data name="TOKEN_EXPIRADO" xml:space="preserve">
    <value>¡Realice el inicio de sesión nuevamente!</value>
  </data>
  <data name="USUARIO_SEM_PERMISSAO" xml:space="preserve">
    <value>No tienes permiso para acceder a este recurso.</value>
  </data>
  <data name="VALOR_PLANO_NEGATIVO" xml:space="preserve">
    <value>El valor del plan no puede ser negativo</value>
  </data>
  <data name="VIGENCIA_MES_NEGATIVA" xml:space="preserve">
    <value>La vigencia del mes debe ser mayor que cero</value>
  </data>
</root>