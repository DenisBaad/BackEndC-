<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CNPJCPF_TAMANHO_INVALIDO" xml:space="preserve">
    <value>O Campo CPFCNPJ não pode ter menos que 11 e nem mais que 14 números</value>
  </data>
  <data name="CNPJ_INVALIDO" xml:space="preserve">
    <value>O CNPJ informado é inválido</value>
  </data>
  <data name="CPF_INVALIDO" xml:space="preserve">
    <value>O CPF informado é inválido</value>
  </data>
  <data name="DESCRICAO_OBRIGATORIA" xml:space="preserve">
    <value>A descrição deve ser informada</value>
  </data>
  <data name="EMAIL_USUARIO_EMBRANCO" xml:space="preserve">
    <value>O Email do usuário deve ser informado.</value>
  </data>
  <data name="EMAIL_USUARIO_INVALIDO" xml:space="preserve">
    <value>O Email do usuário é inválido.</value>
  </data>
  <data name="EMAIL_USUARIO_JA_CADASTRADO" xml:space="preserve">
    <value>O Usuário informado já esta cadastrado no banco de dados.</value>
  </data>
  <data name="FATURA_FIM_VIGENCIA_OBRIGATORIA" xml:space="preserve">
    <value>A data de fim da vigência da fatura é obrigatória.</value>
  </data>
  <data name="FATURA_INICIO_VIGENCIA_OBRIGATORIA" xml:space="preserve">
    <value>A data de início da vigência da fatura é obrigatória.</value>
  </data>
  <data name="FATURA_NEGATIVA" xml:space="preserve">
    <value>Fatura não pode ser negativa</value>
  </data>
  <data name="FATURA_VENCIMENTO" xml:space="preserve">
    <value>A data de vencimento da fatura não pode ser anterior à data atual.</value>
  </data>
  <data name="IDENTIDADE_CARACTERES_ESPECIAIS" xml:space="preserve">
    <value>O campo identidade deverá conter somente números</value>
  </data>
  <data name="IDENTIDADE_TAMANHO_INVALIDO" xml:space="preserve">
    <value>O campo Identidade deverá ter no mínimo 6 e no máximo 20 números</value>
  </data>
  <data name="LOGIN_INVALIDO" xml:space="preserve">
    <value>Parâmetros de login inválidos</value>
  </data>
  <data name="NOME_CLIENTE_TAMANHO_INVALIDO" xml:space="preserve">
    <value>O Nome do cliente deve ter no mínimo 3 e no máximo 45 caracteres</value>
  </data>
  <data name="NOME_CLIENTE_VAZIO" xml:space="preserve">
    <value>O Nome do cliente deve ser informado</value>
  </data>
  <data name="NOME_FANTASIA_CARACTERES_ESPECIAIS" xml:space="preserve">
    <value>O Nome fantasia não poderá conter caracteres especiais</value>
  </data>
  <data name="NOME_FANTASIA_TAMANHO_INVALIDO" xml:space="preserve">
    <value>O Nome fantasia deve ter no mínimo 3 e no máximo 45 caracteres</value>
  </data>
  <data name="NOME_USUARIO_EMBRANCO" xml:space="preserve">
    <value>O Nome do usuário deve ser informado.</value>
  </data>
  <data name="ORGAO_EXPEDIDOR_CARACTERES_ESPECIAIS" xml:space="preserve">
    <value>O Órgão expedidor não poderá conter caracteres especiais</value>
  </data>
  <data name="ORGAO_EXPEDIDOR_TAMANHO_INVALIDO" xml:space="preserve">
    <value>O Órgao expedidor deverá ter no máximo 10 caracteres</value>
  </data>
  <data name="ORGAO_EXPEDIDOR_VAZIO" xml:space="preserve">
    <value>Quando informada identidade deverá ser informado o órgão expedidor</value>
  </data>
  <data name="QUANTIDADE_USUARIO_NEGATIVO" xml:space="preserve">
    <value>Quantidade de usuários não pode ser zero</value>
  </data>
  <data name="SENHA_USUARIO_TAMANHO_INVALIDO" xml:space="preserve">
    <value>A senha deve conter no mínimo seis caracteres</value>
  </data>
  <data name="STATUS_OBRIGATORIO" xml:space="preserve">
    <value>O status deve ser informado</value>
  </data>
  <data name="TIPO_DEVE_SER_INFORMADO" xml:space="preserve">
    <value>O tipo de cliente deve ser informado corretamente</value>
  </data>
  <data name="TOKEN_EXPIRADO" xml:space="preserve">
    <value>Realize o login novamente!</value>
  </data>
  <data name="USUARIO_SEM_PERMISSAO" xml:space="preserve">
    <value>Você não tem permissão para acessar esse recurso</value>
  </data>
  <data name="VALOR_PLANO_NEGATIVO" xml:space="preserve">
    <value>Valor do plano não pode ser negativo</value>
  </data>
  <data name="VIGENCIA_MES_NEGATIVA" xml:space="preserve">
    <value>Vigencia do mês deve ser maior que zero</value>
  </data>
</root>